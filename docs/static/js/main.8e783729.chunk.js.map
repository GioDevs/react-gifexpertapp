{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAEjC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAEzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,mCCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAkBZM,GAlBY,4CAAH,sDCAL,SAASO,EAAT,GAAyC,EAAlBJ,GAAmB,IAAfC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAG7C,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,kCAAKA,EAAL,UCHG,SAASO,EAAT,GAA+B,IAAZnB,EAAW,EAAXA,SAW9B,ECdW,SAAsBA,GAEjC,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGvB,CAACpB,IAEIqB,EDHwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAW,mCAAd,qBAEZ,qBAAKA,UAAY,YAAjB,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAACK,EAAD,eAESL,GADGA,EAAIC,YEvBjC,IAAMgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAQP,SAAAT,GAAQ,OACJ,cAACmB,EAAD,CAEInB,SAAYA,GADLA,Y,MCxBvC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8e783729.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default function AddCategory({setCategories}) {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length >2){\n\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async(category) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=H0cR2OocKyysc18mNiYB330ycLD3Zs4v`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img =>{\n\n        return  {\n            id: img.id, \n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    //console.log(gifs);\n    //setImages(gifs)\n\n    return gifs\n    \n}","import React from 'react'\n\nexport default function GifGridItem( {id, title, url} ) {\n\n    // console.log(id, title, url)\n    return (\n        <div className = \"card animate__animated animate__fadeIn\">\n            <img src = {url} alt = {title} />\n            <p> {title} </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport useFetchGifs from '../hooks/useFetchGifs';\n//import { getGifs } from '../helpers/getGifs';\nimport GifGridItem from './GifGridItem';\n\nexport default function GifGrid( {category}) {\n\n    // const apiKey = 'H0cR2OocKyysc18mNiYB330ycLD3Zs4v';\n\n    //const [images, setImages] = useState([]);\n\n    // useEffect(() => {\n    //     getGifs(category)\n    //     .then(setImages)\n    // },[category])\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className= \"animate__animated animate__fadeIn\">{ category }</h3>\n\n            {loading && <p className= \"animate__animated animate__flash\">Loading</p>}\n\n            <div className = \"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key = { img.id }\n                            { ...img } \n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs'\nexport default function useFetchGifs(category) {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    },[category])\n\n    return state;\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setCategories([...categories, 'Nuevo elemento']);\n    //     setCategories(cats => [...cats, 'Nuevo elemento'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories}/>\n            <hr/> \n\n            <ol>\n                {\n                    categories.map(\n                        // category => {\n                        //     return <li key = { category } >{category}</li>\n                        // }\n                        \n                        // category => \n                        //    ( <li key = { category } >{category}</li>)   \n                        \n                        category =>( \n                            <GifGrid \n                                key = {category}\n                                category = {category}\n                            />    \n                        )   \n                    )\n                }\n\n\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n// const GifsExpertApp = props => {\n//   return (\n//       <>\n//         <h2>ExpertApp</h2>\n//         <hr/>\n          \n//       </>\n//   )\n// }\n\n// GifsExpertApp.propTypes = {\n\n// }\n\n// export default GifsExpertApp\n\n"],"sourceRoot":""}